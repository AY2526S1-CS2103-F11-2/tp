@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":FindCommandParser" as FindCommandParser LOGIC_COLOR
participant "f:FindCommand" as FindCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("find guitar piano")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("find guitar piano")
activate AddressBookParser

create FindCommandParser
AddressBookParser -> FindCommandParser
activate FindCommandParser
FindCommandParser --> AddressBookParser

AddressBookParser -> FindCommandParser : parse("guitar piano")
activate FindCommandParser
FindCommandParser -> FindCommandParser : trim arguments

alt No keywords provided
    FindCommandParser -> FindCommandParser : throw ParseException
    deactivate FindCommandParser
    FindCommandParser --> AddressBookParser : raises ParseException
    destroy FindCommandParser
    AddressBookParser --> LogicManager : raises ParseException
    deactivate AddressBookParser
    LogicManager --> [ : propagate ParseException
    deactivate LogicManager
else Keywords present
    FindCommandParser -> FindCommandParser : split into keywords
    FindCommandParser -> FindCommandParser : create predicate
    create FindCommand
    FindCommandParser -> FindCommand
    activate FindCommand
    FindCommand --> FindCommandParser
    deactivate FindCommand

    FindCommandParser --> AddressBookParser : command
    deactivate FindCommandParser
    ' Hidden arrow to position destroy marker correctly
    FindCommandParser -[hidden]-> AddressBookParser
    destroy FindCommandParser

    AddressBookParser --> LogicManager : command
    deactivate AddressBookParser

    LogicManager -> FindCommand : execute(model)
    activate FindCommand

    FindCommand -> FindCommand : assert predicate != null
    FindCommand -> Model : updateFilteredPersonList(predicate)
    activate Model
    Model --> FindCommand
    FindCommand -> Model : getFilteredPersonList()
    Model --> FindCommand : filteredList
    deactivate Model

    FindCommand -> FindCommand : assert filtered list not null
    FindCommand -> FindCommand : assert all persons match predicate

    create CommandResult
    FindCommand -> CommandResult : new(String.format(...))
    activate CommandResult
    CommandResult --> FindCommand
    deactivate CommandResult

    FindCommand --> LogicManager : result
    deactivate FindCommand

    LogicManager --> [
    deactivate LogicManager
end

@enduml